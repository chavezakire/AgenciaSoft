
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ServiceReserva2", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceReserva2 {


    /**
     * 
     * @param cliente
     * @param habitacion
     * @param fecini
     * @param venta
     * @param fecfin
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "add_Reserva")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add_Reserva", targetNamespace = "http://services/", className = "services.AddReserva")
    @ResponseWrapper(localName = "add_ReservaResponse", targetNamespace = "http://services/", className = "services.AddReservaResponse")
    public boolean addReserva(
        @WebParam(name = "habitacion", targetNamespace = "")
        int habitacion,
        @WebParam(name = "fecini", targetNamespace = "")
        String fecini,
        @WebParam(name = "fecfin", targetNamespace = "")
        String fecfin,
        @WebParam(name = "venta", targetNamespace = "")
        float venta,
        @WebParam(name = "cliente", targetNamespace = "")
        String cliente);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://services/", className = "services.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://services/", className = "services.HelloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param dni
     * @return
     *     returns java.util.List<services.Reserva>
     */
    @WebMethod(operationName = "HistorialReservaCliente")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "HistorialReservaCliente", targetNamespace = "http://services/", className = "services.HistorialReservaCliente")
    @ResponseWrapper(localName = "HistorialReservaClienteResponse", targetNamespace = "http://services/", className = "services.HistorialReservaClienteResponse")
    public List<Reserva> historialReservaCliente(
        @WebParam(name = "dni", targetNamespace = "")
        String dni);

}
