
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ServiceHabitacion2", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceHabitacion2 {


    /**
     * 
     * @param idhotel
     * @param tipohab
     * @param fh
     * @param fd
     * @return
     *     returns java.util.List<services.Habitacion>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findHabDisponible", targetNamespace = "http://services/", className = "services.FindHabDisponible")
    @ResponseWrapper(localName = "findHabDisponibleResponse", targetNamespace = "http://services/", className = "services.FindHabDisponibleResponse")
    public List<Habitacion> findHabDisponible(
        @WebParam(name = "idhotel", targetNamespace = "")
        int idhotel,
        @WebParam(name = "tipohab", targetNamespace = "")
        int tipohab,
        @WebParam(name = "fd", targetNamespace = "")
        String fd,
        @WebParam(name = "fh", targetNamespace = "")
        String fh);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://services/", className = "services.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://services/", className = "services.HelloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
